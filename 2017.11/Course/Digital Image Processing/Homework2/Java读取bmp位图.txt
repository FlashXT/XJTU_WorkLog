											Java读取bmp位图
BMP由四部分组成:	
				位图文件头,位图信息头,颜色,图像数据区;
				BMP图片是三个字节为一个颜色保存,将字节拼接为int需要使用位移来做。
位图文件头 (12个字节):
				0000-0001：文件标识，为字母ASCII码“BM” 42 4D；
				0002-0005：整个文件大小，单位字节；
				0006-0009：这个位置的数字是被微软保留的；
				000A-000D：记录图像数据区的起始位置：从文件开始到位图数据(bitmap data)之间的偏移量。 
位图信息头()：
				000E-0011 ：图像描述信息块的大小
				0012-0015 ：图像宽度,以像素为单位。
				0016-0019 ：图像高度,以像素为单位。
				001A-001B ：图像的plane总数（恒为1）。
				001C-001D : 记录像素,也就是颜色。
							1 - Monochrome bitmap，
							4 - 16 color bitmap，
							8 - 256 color bitmap，
							F - 16位位图，
							18 - 24bit (true color) bitmap，
							20 - 32位位图。

				001E-0021：数据压缩方式（数值位0：不压缩；1：8位压缩；2：4位压缩；3：Bitfields压缩）。
				0022-0025：图像区数据的大小。单位字节，该数必须是4的倍数。
				0026-0029：水平每米有多少像素，在设备无关位图（.DIB）中，每字节以00H填写。
				002A-002D：垂直每米有多少像素，在设备无关位图（.DIB）中，每字节以00H填写。
				002E-0031：此图像所用的颜色数。
				0032-0035：指定重要的颜色数。当该域的值等于颜色数时（或者等于0时），表示所有颜色都一样重要。
   读取图片时注意跳过前18个字节，然后读出图片大小，图像数据区的大小与图片实际尺寸可能存在不一致，因为图片数据
区字节数必须是4的倍数，所以后面可能有补零，需要舍弃。其次，在通过读取四字节图片大小转化为int时需要注意byte值应
该与0xff相与，否则可能出现负数，因为java采用补码存储数据。